# This workflow runs unit tests on the project then attempts to build it whenever 
# changes are pushed/pull requested on the main 3 branches
# No artifacts are uploaded
name: Test and Build

on: [push, pull_request]
    branches:
        - release
        - dev-stable
        - dev-unstable

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  RunProjectTests:
    name: Run Tests for Unity Project
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - # For if the unity project isn't at the root of the repo
        unityVersion:
          - 2019.4.17f1
        targetPlatform:
          - StandaloneWindows64 # Test a win64 standalone
      
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        
      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS Cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull
      
      - name: Restore Library Cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      
      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v2.0-alpha-2
        id: testRunner
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: playmode

  BuildForTargetPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    needs: RunProjectTests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - # For if the unity project isn't at the root of the repo
        unityVersion:
          - 2019.4.17f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
          #- WSAPlayer # Build an Windows Store Apps player.
          #- PS4 # Build a PS4 Standalone.
          #- XboxOne # Build a Xbox One Standalone.
          #- tvOS # Build to Apple's tvOS platform.
          #- Switch # Build a Nintendo Switch player.
    
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      
      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS Cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull
      
      - name: Restore Library Cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
        
      - name: Build Unity Project
        uses: game-ci/unity-builder@v2.0-alpha-6
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic
          customParameters: ''
